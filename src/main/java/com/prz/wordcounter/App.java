package com.prz.wordcounter;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.jfree.chart.JFreeChart;


/**
 * Hello world!
 *
 */
public class App {
	public String inputText;
	public static List<String> words;
	

	/** 
	 * Metoda odpowidzialna za podzielenie wejsciowego tekstu na slowa. 
	 * @param inputString - caly tekst
	 * @return zwraca list wszystkich slow
	 */
	public static List<String> splitInputIntoWords(String inputString) {
		words = new ArrayList<String>();
		String[] w = inputString.split(" |\\.|\\,|\\:|\\!|\\?|\\'|\"");
		words = Arrays.asList(w);

		ArrayList<String> word2 = new ArrayList<String>();
		for (String item : words) {
			if (item.length() != 0)
				word2.add(item);
		}

		return word2;
	}

	/**
	 * Metoda odpowiedzialna za zliczenie ilosci wystapien slow o konkretnej dlugosci.  
	 * @param words - lista zawierajaca wszystkie slowa
	 * @return zwraca mape w postaci:
	 * 	key 	- dlugosc slowa
	 *  value 	- ilosc wystapien slowa o danej dlugosci
	 */
	public static Map<Integer, Integer> countWords(ArrayList<String> words) {
		Map<Integer, Integer> wordCountList = new HashMap<Integer, Integer>();
		for (String word : words) {
			if (wordCountList.get(word.length()) == null)
				wordCountList.put(word.length(), 1);
			else
				wordCountList.put(word.length(),
						wordCountList.get(word.length()) + 1);
		}

		return wordCountList;
	}

	public static void main(String[] args) {
		String test = "YOU ARE AUTHORIZED TO USE THIS SYSTEM FOR APPROVED BUSINESS PURPOSES ONLY. "
				+ "USE FOR ANY OTHER PURPOSE IS PROHIBITED. ALL TRANSACTIONAL RECORDS, REPORTS, EMAIL, "
				+ "SOFTWARE AND OTHER DATA GENERATED BY as as OR RESIDINasG UPON THIS SYSTEM";
		
		List<String> slowa = new ArrayList<String>();
		slowa = splitInputIntoWords(test);
		
		for (String item : slowa) {
			System.out.println(item);
		}

		Map<Integer, Integer> counts = new HashMap<Integer, Integer>();

		counts = countWords((ArrayList<String>) slowa);
		for (Map.Entry<Integer, Integer> item : counts.entrySet()) {
			System.out.println(item.getKey() + " literowych slow jest: "
					+ item.getValue());
		}
		
		
		BarChart chartCreator = new BarChart();
		JFreeChart chart = chartCreator.createBarChart(counts);
		chartCreator.saveCharAsJPG(chart);
//		GUI.setChart(chart);
		new ChartGUI(chart);
		new MainGUI();
		
	}
}
